version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: projectpulse-db-prod
    environment:
      POSTGRES_DB: projectpulse
      POSTGRES_USER: projectpulse
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - projectpulse-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U projectpulse"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Service
  backend-service:
    image: ${DOCKER_USERNAME}/projectpulse-backend:latest
    container_name: projectpulse-backend-prod
    environment:
      DATABASE_URL: postgresql://projectpulse:${POSTGRES_PASSWORD}@database:5432/projectpulse
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
    ports:
      - "8000:8000"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - projectpulse-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Service
  frontend-service:
    image: ${DOCKER_USERNAME}/projectpulse-frontend:latest
    container_name: projectpulse-frontend-prod
    environment:
      VITE_API_URL: ${API_URL}
    ports:
      - "3000:3000"
    depends_on:
      - backend-service
    networks:
      - projectpulse-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  projectpulse-network:
    driver: bridge
