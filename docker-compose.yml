version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: taskflow-db
    environment:
      POSTGRES_DB: taskflow
      POSTGRES_USER: taskflow
      POSTGRES_PASSWORD: taskflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - taskflow-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U taskflow"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Service
  backend-service:
    build:
      context: ./backend-service
      dockerfile: Dockerfile
    container_name: taskflow-backend
    environment:
      DATABASE_URL: postgresql://taskflow:taskflow@database:5432/taskflow
      SECRET_KEY: your-secret-key-change-in-production
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
    ports:
      - "8000:8000"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - taskflow-network
    volumes:
      - ./backend-service:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Service
  frontend-service:
    build:
      context: ./frontend-service
      dockerfile: Dockerfile
    container_name: taskflow-frontend
    environment:
      VITE_API_URL: http://192.168.29.92:8000/api
    ports:
      - "3000:3000"
    depends_on:
      - backend-service
    networks:
      - taskflow-network
    volumes:
      - ./frontend-service:/app
      - /app/node_modules
    command: npm run dev -- --host 0.0.0.0

volumes:
  postgres_data:

networks:
  taskflow-network:
    driver: bridge
